name: coinbase-build

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      # Step 1: Checkout the latest code from the repository
      - uses: actions/checkout@v4

      # Step 2: Set up JDK 21 for the build process
      - name: Setting up JDK 21
        uses: actions/setup-java@v4
        with:
          java-version: '21'
          distribution: 'temurin'
          cache: maven

      # Step 3: Build the project using Maven
      - name: Build with Maven
        run: mvn clean install

      # Step 4: Setup AWS ECR Details
      - name: Setting up AWS ECR Details
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ secrets.AWS_REGION }}

      # Step 5: Login to Amazon ECR
      - name: Login to Amazon ECR
        id: login-pf-aws-ecr
        uses: aws-actions/amazon-ecr-login@v2

      # Step 6: Build and push Docker image
      - name: Build and push Docker image
        env:
          ECR_REGISTRY: ${{ steps.login-pf-aws-ecr.outputs.registry }}
          ECR_REPOSITORY: ${{ secrets.ECR_REPOSITORY }}
          IMAGE_TAG: 'latest'
        run: |
          docker build -t $ECR_REGISTRY/$ECR_REPOSITORY:coinbase-$IMAGE_TAG .
          docker push $ECR_REGISTRY/$ECR_REPOSITORY:coinbase-$IMAGE_TAG

      # Step 7: Set up Kubernetes CLI (kubectl)
      - name: Set up Kubernetes CLI
        uses: azure/setup-kubectl@v1
        with:
          version: '1.25.0'

      # Step 8: Configure kubectl with kubeconfig
      - name: Configure kubectl
        env:
          KUBECONFIG: ${{ secrets.KUBECONFIG }}
        run: echo "$KUBECONFIG" | base64 --decode > $HOME/.kube/config

      # Step 9: Apply Kubernetes manifests
      - name: Deploy to Kubernetes
        run: |
          kubectl apply -f k8s/deployment.yaml
          kubectl apply -f k8s/service.yaml
